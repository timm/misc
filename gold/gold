#!/usr/bin/env bash
# vim: set nospell ts=2 sw=2 sts=2 et :
#--------- --------- --------- --------- --------- ---------

### make sure we have a config file
f=goldrc
if   [ -f "$f"    ]; then . $f
elif [ -f "../$f" ]; then . ../$f
else cat <<-'EOF'>$f
	if [ -z "$GOLD" ]; then
	  export GOLD="$(PWD)"
	  export AWKPATH="$GOLD:$AWKPATH"
	  export PATH="$GOLD:$PATH"
	fi
	EOF
  . $f
fi

### make sure that auto-genereated files are never committed
f=$GOLD/.gitignore
if [ ! -f "$f" ]; then cat<<'EOF'>$f
# Gold
*.awk
goldrc
# Swap
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

# Session
Session.vim
Sessionx.vim

# Temporary
.netrwhist
*~
# Auto-generated tag files
tags
# Persistent undo
[._]*.un~
EOF
git add $f
fi

### make sure we have the library
f=$GOLD/au
from=https://raw.githubusercontent.com/timm/misc/master/gold/au
if [ ! -f "$f" ]; then 
  wget -O $f $from
  git add $f
fi

### make sure i can run gold
chmod +x $GOLD/gold

### turn .au into .awk
au2awk() {
 gawk '

BEGIN {In=1}

# convert multi-line strings to commented lines

gsub(/^"""/,"") { In =  1 - In  }
                { pre  = In ? "" : "# " }

# catch the current function name (needed for isa)
In && /^[ \t]*function[ \t]+/ {
	Fun=gensub(/^[ \t]*function[ \t]+([_A-Za-z0-9]+).*/,
             "\\1","g",$0)	
}

# make isa also add links kids to parents
In && /^[ \t]*isa\(/ {
	$0= gensub(/(^[ \t]*)isa\((([_A-Za-z0-9]+)\(([^,\)]+).*)/,
	             "\\1isa(\\4,\""Fun"\",\"\\3\",\\2","g",$0)
}

# add polymoprhism lookup
In && /@[A-Z]/ {
	$0= gensub(/@([A-Z].+)(\(([^,\)]+)[,\)])/, 
             "(MY=my(\\3,\"\\1\"))@MY\\2","g",$0)
}

# add in dot notation
In {
  $0 = gensub(/\.([^0-9])([a-zA-Z0-9_]*)/,
              "[\"\\1\\2\"]", "g", $0) 
}

{ print pre $0 } '
}



### zap old awks
if [ "$1" == "zap"  ] 
then
  rm */*.awk
else
   Todo="$*"
fi

### update files
for f in $GOLD/*.au $GOLD/*/*.au; do
  g=${f%.au}.awk
  if [ "$f" -nt "$g" ]  ; then
    cat $f | au2awk > $g
  fi
done

### if any command line args, run them
if [ -n "$Todo" ]; then
   gawk -f $Todo
fi
