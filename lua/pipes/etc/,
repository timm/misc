#!/usr/bin/env bash
# vim : set syntax=sh :
# asdas
export BASH_SILENCE_DEPRECATION_WARNING=1

D=lua/pipes

alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias gp="git add * ; git commit -am saving; git push; git status";
alias grep='grep --color=auto'
alias ls="ls -G"

,a() { ,alias    ; }
,c() { ,commands   ; }
,e() { ,edit $*  ; }
,h() { ,help     ; }
,l() { ,lua $* ; }
,p() { ,pdf $*   ; }

NO='\033[0m'          ; RED='\033[0;31m'        ; GREEN='\033[0;32m'
ORANGE='\033[0;33m'   ; BLUE='\033[0;34m'       ; PURPLE='\033[0;35m'
CYAN='\033[0;36m'     ; LIGHTGRAY='\033[0;37m'  ; DARKGRAY='\033[1;30m'
LIGHTRED='\033[1;31m' ; LIGHTGREEN='\033[1;32m' ; YELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'; LIGHTPURPLE='\033[1;35m'; LIGHTCYAN='\033[1;36m'
WHITE='\033[1;37m'

,alias() { ## show aliases
  echo ""
	echo -e "${NO}${LIGHTRED}Short cuts:$NO"
	alias | sed 's/alias /	  /' 
  echo -en "$NO"
}

,commands() { ## show avialable commands"
  echo ""
	echo -e "${NO}${LIGHTRED}Command:$NO"
  gawk 'BEGIN{FS="[(][)][:space:]*[^#]+##[:space:]*"} 
            /^,/ && /##/  { printf("%15s :%s\n",$1,$2) }
         ' $H/$D/etc/,   
  echo -en "$NO"
}

,edit() { ## edit multiple files
   nvim -u $H/$D/etc/nvimrc -p $* ; }

,help() { ## show help
	echo -en "$NO$ORANGE"
	echo "  ___" 
	echo "  _( )    comma,  v1.0"
	echo "  _|/     timm, bsd2.0" 
  ,alias
  ,commands
  }

,lua() {  ## for short cut to run X.lua
  f=$1.lua; shift; lua $f $* ; }

,pdf() { ## print lua to pdf
	mkdir -p ~/tmp
	echo "pdf-ing $1 ... "
	a2ps                          \
		-Br                          \
		--chars-per-line 105          \
		--file-align=fill              \
		--line-numbers=1                \
		--borders=no                     \
		--pro=color                       \
		--columns  3                       \
		-M letter                           \
		--pretty-print="$H/$D/etc/lua.ssh"   \
		-o ~/tmp/$1.ps $1.lua
	ps2pdf ~/tmp/$1.ps ~/tmp/$1.pdf;  rm ~/tmp/$1.ps
  open ~/tmp/$1.pdf ; }


here() { # internal command, prints current dir
   cd $1; basename `pwd` ; }

PROMPT_COMMAND='echo -ne ",$(git branch 2>/dev/null | grep '^*' | colrm 1 2):";PS1="$(here ..)/$(here .):\!\e[m â–¶ "'

if [ -z "$H" ] 
then H=`git rev-parse --show-toplevel`
     tput clear
     ,help
     H="$H" bash --init-file $H/$D/etc/, -i
fi
