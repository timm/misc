#!/usr/bin/env bash
# AUK: Preprocessor for AWK code
# (c) 2020 MIT License, Tim Menzies timm@ieee.org
# Generated code is written to $HOME/opt/share/gawk.
# Adds polymorphism, encapsulation, objects, 
#      attributes, methods, multi-line comments.

# usage:
#   ./auk               # generates code, written  share dir.
#   ./awk aa.awk        # as above,  then runs it
#   Com | ./auk aal.awk # as above, taking input from Com
#   . auk               # defines some useful bash short cuts

# configuration: where to write the generated code
Lib=$HOME/opt/share/gawk

#         .-"-.
#        /  ,~a\_
#        \  \__))>  a little auk (awk)
#        ,) ." \    goes a long way
#       /  (    \
#      /   )    ;
#     /   /     /
#   ,/_."`  _.-`
#    /_/`"\\___
#         `~~~`

prep() { gawk '
  /^#</ { 
    print $0; 
    while(getline) {
       print "# "$0
       if(/^#>/) break} }
  /^function[ \t]+[A-Z][^\(]*\(/ {
      split($0,a,/[ \t\(]/)
      PREFIX = a[2] }
  { gsub(/ _/," " PREFIX,$0)
    print Pre gensub( /\.([^0-9\\*\\$\\+])([a-zA-Z0-9_]*)/, 
                      "[\"\\1\\2\"]","g", $0) }' 
}

Auk=$(cd $( dirname "${BASH_SOURCE[0]}" ) && pwd )

mkdir -p $Lib
for i in *.awk; do
  f=$i
  g=$(basename $f)
  g=$Lib/${g%.*}.awk
  if [ "$f" -nt "$g" ]; then cat $f | prep > $g; fi
done

if [ -n "$1" ]; then
  f=$1
  g=$(basename $f)
  g=$Lib/${g%.*}.awk
  shift
  AWKPATH="$Lib:./:$AWKPATH"
  if [ -t 0 ]
    then         AWKPATH="$AWKPATH" gawk -f $g $*
    else cat - | AWKPATH="$AWKPATH" gawk -f $g $*
  fi
else
  alias gp='ga;git commit -am save;git push;gs' # end-of-day actions
  alias gs='git status'                         # status 
  alias ls='ls -G'                              # ls
  alias reload='. $Auk/auk'                     # reload these tools
  tput bold; tput setaf 0
  echo ""
  gawk 'sub(/^[ \t]*alias/,"alias") {print $0}' $Auk/auk
  tput sgr0
fi
