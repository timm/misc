#!/usr/bin/env ./gold
# vim: filetype=awk ts=2 sw=2 sts=2  et :

#--------- --------- --------- -------- -------- --------- ---------
# oo support
function List(i)   { split("",i,"") }
function Object(i) { List(i); i.id = ++AU.id }
function zap(i,k)  { k = k?k:length(i)+1; i[k][0]; List(i[k]); return k } 

function is(i,k)          { isa(i,k,"Object") }
function isa(  i,k,p)     { AU.isa[k]=p; @p(i)    ; i.is=k }
function isas( i,k,p,a)   { AU.isa[k]=p; @p(i,a)  ; i.is=k }
function isass(i,k,p,a,b) { AU.isa[k]=p; @p(i,a,b); i.is=k }

# note the k=0 convention. if 0 then the new item is pushed to the end
# of the list.  Note: k=0 only works if "i" has been pre initialized
function has( i,k,f)         { f=f?f:"List"; k= zap(i,k); return @f(i[k]) }
function hass(i,k,f,a)       {         k= zap(i,k); return @f(i[k],a)     }
function hasss(i,k,f,a,b)    {         k= zap(i,k); return @f(i[k],a,b)   }
function hassss(i,k,f,a,b,c) {         k= zap(i,k); return @f(i[k],a,b,c) }

function how(k,f,   g) {
  while(k) {
    g = k f
    if (g in FUNCTAB) return g
    k = AU.isa[k]
  }
  print "#E> failed method lookup: ["f"]"
  exit 2
}

