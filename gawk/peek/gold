#!/usr/bin/env bash
# vim: ft=sh ts=2 sw=2 et :
here=$(cd $( dirname "${BASH_SOURCE[0]}" ) && pwd )

chmod +x $here/gold
mkdir -p $here/docs

want=$here/.gitignore
[ -f "$want" ] || cat<<EOF>$want
*.awk
EOF

transpile() { gawk  '
  BEGIN            { Comment="" }
  sub(/^\|#/,"")   { Comment=""  ; print; next}
  sub(/^#\|[ \t]*/,"")   { Comment="# "; print; next}

  /^function/ { gsub(/:[A-Z0-9a-z\*:\|]*/,"") }
  /^func(tion)?[ \t]+[A-Z][^\(]*\(/ {
      split($0,a,/[ \t\(]/)
      PREFIX = a[2]
  }
  { gsub(/ _/," " PREFIX,$0)
    print Comment  gensub( /\.([^0-9\\*\\$\\+])([a-zA-Z0-9_]*)/, 
                      "[\"\\1\\2\"]","g", $0)} '
} 
toc() { gawk '
               { Part2? (Hi=Hi"\n"$0) : (Lo=Lo"\n"$0) }
  /^=========/ { Part2=1; next  }
           END { print Hi"\n"Lo }'
}
for f in *.gold; do
  g=${f%.*}.awk
  if [ "$f" -nt "$g" ]; then 
    cat $f | transpile> $g
  fi
done

if [ "$1" == "docs" ]; then
   for f in *.gold; do
     g=$here/docs/${f%.*}.md
     if [ "$f" -nt "$g" ]; then 
       echo "# $f"
       echo "# " $f > $g
       cat $f | gawk -f $here/body.awk | toc >> $g
     fi
   done
elif [ "$1" == "push" ]; then
  git config advice.addIgnoredFile false
  git add *
  git commit -am saving
  git push
  git status
elif [[ "$1" =~ ^.*gold$ ]] ; then
  g=${1%.*}.awk
  shift
  if [ -t 1 ]
  then         gawk -f $g $*
  else cat - | gawk -f $g $*
  fi
elif [ -n "$1" ]; then
  echo "?"
fi
