#!/usr/bin/env bash
# vim: ft=sh ts=2 sw=2 et :
ext=gold
here=$(cd $( dirname "${BASH_SOURCE[0]}" ) && pwd )

chmod +x $here/$ext
mkdir -p $here/docs

want=$here/.gitignore
[ -f "$want" ] || cat<<EOF>$want
*.awk
EOF

body() { gawk '
  BEGIN { Comment = "" 
        }
  sub(/^\|#/,"")       { Comment=0; print; next}
  sub(/^#\|[ \t]*/,"") { Comment=1; print; next}
  Comment              { print $0; next }
  sub(/^# # /,   "")   { print "\n# "    $0; Pre="## "   ; next}
  sub(/^# ## /  ,"")   { print "\n## "   $0; Pre="### "  ; next}
  sub(/^# ### /, "")   { print "\n### "  $0; Pre="#### " ; next}
  sub(/^# #### /,"")   { print "\n#### " $0; Pre="##### "; next}
  sub(/^### /,   "")   { Preamble=1; print "\n"Pre $0 ; next }
  sub(/^## /,    "")   { Preamble=1 ; print $0 ; next}
  Preamble && /^function/{ 
    Preamble=0
    print "\n<details><summary>...</summary>"
    print "\n```awk"
    while($0 !~ /^[ \t]*$/)  {
      print $0
      getline}
    print "```"
    print "\n</details>\n\n" } '
}
toc() { gawk '
  function ns(n,    s) { while(n-- > 0) s= s "  "      ; return s}
  function trim(s)     { gsub(/(^[ \t]*|[ \t]*$)/,"",s); return s}
       { Body = Body "\n" $0 }
  /^#/ { 
   prefix = ns(length($1)-1 )
   $1=""
   $0= trim($0)
   split($0,a,":")
   text = a[1]; help=a[2]
   gsub(/[^[:alpha:]]/,"",$0)
   if (help)
      print(prefix "- ["text"](#"tolower($0)") : " help)
   else
      print(prefix "- ["text"](#"tolower($0)") " )
  }
  END {print Body} '
} 
transpile() { gawk  '
  BEGIN            { Comment="" }
  sub(/^\|#/,"")   { Comment=""  ; print; next}
  sub(/^#\|[ \t]*/,"")   { Comment="# "; print; next}

  /^func(tion)?[ \t]+[A-Z][^\(]*\(/ {
      split($0,a,/[ \t\(]/)
      PREFIX = a[2]
  }
  { gsub(/ _/," " PREFIX,$0)
    print Comment  gensub( /\.([^0-9\\*\\$\\+])([a-zA-Z0-9_]*)/, 
                      "[\"\\1\\2\"]","g", $0)} '
} 
for f in *.$ext; do
  g=${f%.*}.awk
  if [ "$f" -nt "$g" ]; then 
    cat $f | transpile> $g
  fi
  g=$here/docs/${f%.*}.md
  if [ "$f" -nt "$g" ]; then 
     echo "# " $f > $g
     cat $f | body | toc >> $g
  fi  
 done

if [ "$1" == "push" ]; then
  git config advice.addIgnoredFile false
  git add *
  git commit -am saving
  git push
  git status
elif [[ "$1" =~ ^.*$ext$ ]] ; then
  g=${1%.*}.awk
  shift
  if [ -t 1 ]
  then         gawk -f $g $*
  else cat - | gawk -f $g $*
  fi
elif [ -n "$1" ]; then
  echo "?"
fi
