#!/usr/bin/env bash
# vim: ft=sh ts=2 sw=2 et :

here=$(cd $( dirname "${BASH_SOURCE[0]}" ) && pwd )

want=$here/.gitignore
[ -f "$want" ] || cat<<EOF>$want
*.awk
EOF

for f in *.au; do
  g=${f%.*}.md
  if [ "$f" -nt "$g" ]; then cat $f | gawk '
  BEGIN { print "#  '$f'\n" 
          Comment = "" 
        }
  sub(/^\|#/,"")       { Comment=0; print; next}
  sub(/^#\|[ \t]*/,"") { Comment=1; print; next}
  Comment              { print $0; next }
  sub(/^# # /,   "")   { print "\n# "    $0; Pre="## "   ; next}
  sub(/^# ## /  ,"")   { print "\n## "   $0; Pre="### "  ; next}
  sub(/^# ### /, "")   { print "\n### "  $0; Pre="#### " ; next}
  sub(/^# #### /,"")   { print "\n#### " $0; Pre="##### "; next}
  sub(/^### /,   "")   { print "\n"Pre $0 ; next }
  sub(/^## /,    "")   { Preamble=1 ; print $0 ; next}
  Preamble && /^function/{ 
    Preamble=0
    print "\n<details><summary>...</summary>"
    print "\n```awk"
    while($0 !~ /^[ \t]*$/)  {
      print $0
      getline}
    print "```"
    print "\n</details>\n\n" }
   ' > $g 
  fi
done

for f in *.au; do
  g=${f%.*}.awk
  if [ "$f" -nt "$g" ]; then cat $f | gawk '
      BEGIN            { Comment="" }
      sub(/^\|#/,"")   { Comment=""  ; print; next}
      sub(/^#\|[ \t]*/,"")   { Comment="# "; print; next}

     /^func(tion)?[ \t]+[A-Z][^\(]*\(/ {
          split($0,a,/[ \t\(]/)
          PREFIX = a[2]
    }
    { gsub(/ _/," " PREFIX,$0)
      print Comment  gensub( /\.([^0-9\\*\\$\\+])([a-zA-Z0-9_]*)/, 
                          "[\"\\1\\2\"]","g", $0)}
   ' > $g
  fi
done

if [ "$1" == "push" ]; then
  git config advice.addIgnoredFile false
  git add *
  git commit -am saving
  git push
  git status
elif [[ "$1" =~ ^.*au$ ]] ; then
  g=${1%.*}.awk
  shift
  if [ -t 1 ]
  then         gawk -f $g $*
  else cat - | gawk -f $g $*
  fi
elif [ -n "$1" ]; then
  echo "?"
fi
